#!/bin/bash
# Plugin for Nagios/Icinga
# Written by D. Ryobryshkin (dmitry.r@cyberflow.net)
# Last Modified: 2013-05-07
#
# Description:
#
# This plugin will check unmounted drives status for swift zone

PROGNAME=$(basename $0)

# Nagios return codes
ST_OK=0
ST_WR=1
ST_CR=2
ST_UN=3

exitstatus=$STATE_UNKNOWN #default
MESSAGE="All OK"
swift_ring_builder="/usr/bin/swift-ring-builder"
server_type="object"
swift_recon="/usr/bin/swift-recon"

print_usage() {
 	echo "Usage: $PROGNAME <server_type>"
 	echo "       <server_type>	account|container|object
                                        Defaults to object server."
}

print_help() {
 	print_usage
 	echo ""
 	echo ""
 	echo "This plugin will check unmounted drives status for swift zone"
 	exit 0
}

test -f $swift_ring_builder || (echo "$swift-ring-builder not found" && exit 1)

while test -n "$1"; do
    case "$1" in
    	 -help|-h)
	     print_help
	     exit $ST_UK
	     ;;
	 account)
	     builder_file="/etc/swift/account.builder"
	     server_type=$1
	     shift
	     ;;
	 conteiner)
	     builder_file="/etc/swift/conteiner.builder"
	     server_type=$1
	     shift
	     ;; 
	 object)
	     builder_file="/etc/swift/object.builder"
	     server_type=$1
	     shift
	     ;;
         esac
    shift
done

test -n "$builder_file" || builder_file="/etc/swift/object.builder"
test -f $builder_file || (echo "$builder_file not fount" && exit 1)

function get_local_ip() {
   local_ip=$(ip -4 address show bond0 | grep inet | awk '{print $2}' | sed 's/\/24//')
   echo $local_ip
}

function get_zone() {	 
	 zone=$($swift_ring_builder $builder_file search $(get_local_ip) | awk '{print $3}' | grep ^[0-9] -m1)
	 echo  $zone
}

output=$($swift_recon $server_type -u -z $(get_zone)|grep "Not mounted" | awk '{print $3}')

if [ -n "$output" ]; then
   message="WARNING $output not mounted" 
   exitstatus=$ST_WR
else
   message="OK"
   exitstatus=$ST_OK
fi

echo $message
exit $exitstatus

